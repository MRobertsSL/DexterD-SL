#!/usr/bin/env php
<?php

require_once __DIR__ . '/../vendor/autoload.php';

ini_set('display_errors', TRUE);

// Parse the arguments
$longOptions  = array(
	"port::",
	"ip::",
	"data-path::",
	'test::',
);
$options = getopt('h::', $longOptions);

// Print the help
if (isset($options['h'])) {
	print(\Cundd\PersistentObjectStore\Constants::MESSAGE_CLI_WELCOME . PHP_EOL);
	printf('Usage: %s [--port=port] [--ip=ip] [--data-path=path/to/data/folder/]' . PHP_EOL, $argv[0]);
	exit;
}

/**
 * Checks and returns an argument value
 *
 * @param $key
 * @param $options
 * @return null
 */
function checkArgument($key, $options) {
	if (isset($options[$key])) {
		if ($options[$key] === FALSE) {
			printf('The option --%s requires a valid path' . PHP_EOL, $key);
			exit(1);
		}
		return $options[$key];
	}
	return NULL;
}
$dataPath = checkArgument('data-path', $options);
$port = checkArgument('port', $options);
$ip = checkArgument('ip', $options);

$bootstrap = new \Cundd\PersistentObjectStore\Bootstrap();

/** @var DI\Container $diContainer */
$diContainer = $bootstrap->getDiContainer();

$eventLoop = \React\EventLoop\Factory::create();
$diContainer->set('React\\EventLoop\\LoopInterface', $eventLoop);

$diContainer->get('Cundd\\PersistentObjectStore\\CrashHandler')->register();

/** @var \Cundd\PersistentObjectStore\Server\RestServer $server */
$server = $diContainer->get('Cundd\\PersistentObjectStore\\Server\\RestServer');
$diContainer->set('Cundd\\PersistentObjectStore\\Server\\ServerInterface', $server);


if ($dataPath) {
	$configurationManager = \Cundd\PersistentObjectStore\Configuration\ConfigurationManager::getSharedInstance();
	$configurationManager->setConfigurationForKeyPath('dataPath', $dataPath);
	$configurationManager->setConfigurationForKeyPath('writeDataPath', $dataPath);
}

if ($ip) {
	$server->setIp($ip);
}
if ($port) {
	$server->setPort($port);
}

// If the test option is set start the server in test mode
if (isset($options['test'])) {
	$server->setMode(\Cundd\PersistentObjectStore\Server\ServerInterface::SERVER_MODE_TEST);
	if (is_numeric($options['test'])) {
		$server->setAutoShutdownTime(intval($options['test']));
	}
}
$server->start();


